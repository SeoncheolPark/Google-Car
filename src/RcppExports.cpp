// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// matern
double matern(double d, double sigma2, double phi, double nu);
RcppExport SEXP _GoogleCar_matern(SEXP dSEXP, SEXP sigma2SEXP, SEXP phiSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(matern(d, sigma2, phi, nu));
    return rcpp_result_gen;
END_RCPP
}
// matern_stx_cpp
arma::mat matern_stx_cpp(double sigma2, double phi, double rho, double psi, double nu, arma::vec t1, arma::vec t2, arma::mat X1, arma::mat X2, arma::mat locs1, arma::mat locs2, bool sq);
RcppExport SEXP _GoogleCar_matern_stx_cpp(SEXP sigma2SEXP, SEXP phiSEXP, SEXP rhoSEXP, SEXP psiSEXP, SEXP nuSEXP, SEXP t1SEXP, SEXP t2SEXP, SEXP X1SEXP, SEXP X2SEXP, SEXP locs1SEXP, SEXP locs2SEXP, SEXP sqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs1(locs1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs2(locs2SEXP);
    Rcpp::traits::input_parameter< bool >::type sq(sqSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_stx_cpp(sigma2, phi, rho, psi, nu, t1, t2, X1, X2, locs1, locs2, sq));
    return rcpp_result_gen;
END_RCPP
}
// matern_st_cpp
arma::mat matern_st_cpp(double sigma2, double phi, double rho, double nu, arma::vec t1, arma::vec t2, arma::mat locs1, arma::mat locs2, bool sq);
RcppExport SEXP _GoogleCar_matern_st_cpp(SEXP sigma2SEXP, SEXP phiSEXP, SEXP rhoSEXP, SEXP nuSEXP, SEXP t1SEXP, SEXP t2SEXP, SEXP locs1SEXP, SEXP locs2SEXP, SEXP sqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs1(locs1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs2(locs2SEXP);
    Rcpp::traits::input_parameter< bool >::type sq(sqSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_st_cpp(sigma2, phi, rho, nu, t1, t2, locs1, locs2, sq));
    return rcpp_result_gen;
END_RCPP
}
// matern_s_cpp
arma::mat matern_s_cpp(double sigma2, double phi, double nu, arma::mat locs1, arma::mat locs2, bool sq);
RcppExport SEXP _GoogleCar_matern_s_cpp(SEXP sigma2SEXP, SEXP phiSEXP, SEXP nuSEXP, SEXP locs1SEXP, SEXP locs2SEXP, SEXP sqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs1(locs1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs2(locs2SEXP);
    Rcpp::traits::input_parameter< bool >::type sq(sqSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_s_cpp(sigma2, phi, nu, locs1, locs2, sq));
    return rcpp_result_gen;
END_RCPP
}
// krig_STX_cpp
List krig_STX_cpp(arma::vec par, arma::mat S1, arma::vec t1, arma::mat X1, arma::mat S2, arma::vec t2, arma::mat X2, arma::colvec Y2, arma::colvec Xb1, arma::colvec Xb2);
RcppExport SEXP _GoogleCar_krig_STX_cpp(SEXP parSEXP, SEXP S1SEXP, SEXP t1SEXP, SEXP X1SEXP, SEXP S2SEXP, SEXP t2SEXP, SEXP X2SEXP, SEXP Y2SEXP, SEXP Xb1SEXP, SEXP Xb2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S1(S1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X1(X1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S2(S2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X2(X2SEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Y2(Y2SEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xb1(Xb1SEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type Xb2(Xb2SEXP);
    rcpp_result_gen = Rcpp::wrap(krig_STX_cpp(par, S1, t1, X1, S2, t2, X2, Y2, Xb1, Xb2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GoogleCar_matern", (DL_FUNC) &_GoogleCar_matern, 4},
    {"_GoogleCar_matern_stx_cpp", (DL_FUNC) &_GoogleCar_matern_stx_cpp, 12},
    {"_GoogleCar_matern_st_cpp", (DL_FUNC) &_GoogleCar_matern_st_cpp, 9},
    {"_GoogleCar_matern_s_cpp", (DL_FUNC) &_GoogleCar_matern_s_cpp, 6},
    {"_GoogleCar_krig_STX_cpp", (DL_FUNC) &_GoogleCar_krig_STX_cpp, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_GoogleCar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
